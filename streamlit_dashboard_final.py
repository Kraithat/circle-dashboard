
import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢ ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÄ‡∏Ñ‡∏¥‡∏• ‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏î", layout="wide")

st.title("üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢: ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÄ‡∏Ñ‡∏¥‡∏• ‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏î‡∏°‡∏¥‡πÄ‡∏ô‡∏µ‡∏¢‡∏°")
st.markdown("**‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 28 ‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏° 2568**")

# --- Static Data ---
df_damage = pd.DataFrame({
    '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢ (Damage Type)': [
        '‡∏ú‡∏ô‡∏±‡∏á‡πÅ‡∏ï‡∏Å‡∏£‡πâ‡∏≤‡∏ß (Cracked wall)',
        '‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏∏‡∏î/‡πÅ‡∏ï‡∏Å (Loose/broken tiles)',
        '‡πÄ‡∏û‡∏î‡∏≤‡∏ô‡πÅ‡∏ï‡∏Å‡∏£‡πâ‡∏≤‡∏ß (Cracked ceiling)',
        '‡∏õ‡∏£‡∏∞‡∏ï‡∏π/‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á (Doors/windows)',
        '‡∏ó‡πà‡∏≠ (‡∏õ‡∏£‡∏∞‡∏õ‡∏≤) (Pipes)',
        '‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢ (Damaged furniture)',
        '‡∏ô‡πâ‡∏≥‡∏£‡∏±‡πà‡∏ß‡∏ã‡∏∂‡∏° (Water leak)',
        '‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ (Electrical system)',
        '‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (System failure)'
    ],
    '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà (Frequency)': [580, 330, 220, 160, 60, 50, 45, 30, 15]
}).sort_values(by='‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà (Frequency)', ascending=True)

df_severity = pd.DataFrame({
    '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á (Room ID)': ['1674/479', '1674/379', '1674/47'],
    '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á (Severity Score)': [15.0, 14.5, 14.0]
})

df_tower = pd.DataFrame({
    '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ (Tower)': ['Tower 1', 'Tower 2'],
    '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡πâ‡∏≠‡∏á (Number of Rooms)': [11, 22]
})

# --- Tabs ---
tab1, tab2, tab3, tab4 = st.tabs(["üìå ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢", "üö® ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô", "üè¢ ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏´‡πâ‡∏≠‡∏á", "üìã ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°"])

# --- Tab 1 ---
with tab1:
    st.subheader("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢")
    fig_damage = px.bar(df_damage,
                        x='‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà (Frequency)',
                        y='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢ (Damage Type)',
                        orientation='h',
                        height=500)
    st.plotly_chart(fig_damage, use_container_width=True)

# --- Tab 2 ---
with tab2:
    st.subheader("‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô")
    fig_severity = px.bar(df_severity,
                          x='‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á (Room ID)',
                          y='‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á (Severity Score)',
                          text='‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á (Severity Score)',
                          height=400)
    fig_severity.update_traces(textposition='outside')
    st.plotly_chart(fig_severity, use_container_width=True)

# --- Tab 3 ---
with tab3:
    st.subheader("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏£‡∏ß‡∏à‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£")
    fig_pie = px.pie(df_tower,
                     names='‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ (Tower)',
                     values='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡πâ‡∏≠‡∏á (Number of Rooms)',
                     hole=0.3)
    fig_pie.update_traces(textinfo='percent+label')
    st.plotly_chart(fig_pie, use_container_width=True)

# --- Tab 4 ---
with tab4:
    st.subheader("üìã ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°")

    df_freq = pd.read_csv("damage_frequency.csv")
    df_top = pd.read_csv("top10_damaged_rooms.csv")
    df_survey = pd.read_csv("survey_filtered_data.csv")

    # Filter options
    unique_types = sorted(df_survey['Damage Types'].dropna().unique())
    selected_types = st.multiselect("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π", unique_types, default=unique_types)

    df_filtered = df_survey[df_survey['Damage Types'].isin(selected_types)].copy()

    st.markdown("### üîé ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°")
    fig_survey = px.bar(df_freq[df_freq['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢'].isin(selected_types)],
                        x='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö',
                        y='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢',
                        orientation='h',
                        height=500)
    st.plotly_chart(fig_survey, use_container_width=True)

    st.markdown("### üß± 10 ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
    st.dataframe(df_top, use_container_width=True)

    st.markdown("### üñºÔ∏è ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏†‡∏≤‡∏û")
    df_filtered['Image Link'] = df_filtered['Image Link'].apply(
        lambda x: f'<a href="{x}" target="_blank">‡∏î‡∏π‡∏†‡∏≤‡∏û</a>' if pd.notnull(x) else '')
    st.write(df_filtered[['Room No', 'Damage Types', 'Image Link']].to_html(escape=False, index=False), unsafe_allow_html=True)
